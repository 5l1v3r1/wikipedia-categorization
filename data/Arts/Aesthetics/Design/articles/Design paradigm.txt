The concept of design paradigms derives from the rather ambiguous idea of paradigm originating in the sociology of science, which carries at least two main meanings: While the first meaning of "design paradigm" refers to exemplary design solutions that create "design trends", the second meaning refers to what a group of people expects from a type of design solutions. The term "design paradigm" is used within the design professions, including architecture, industrial design and engineering design, to indicate an archetypal solution.  Thus a Swiss Army Knife is a design paradigm illustrating the concept of a single object that changes configuration to address a number of problems. Design paradigms have been introduced in a number of books including Design Paradigms: A Sourcebook for Creative Visualization by Warren Wake,  and discussed in Design Paradigms: Case Histories of Error and Judgment in Engineering but never defined by Henry Petroski.  This concept is close to design pattern coined by Christopher Alexander in A Pattern Language.  Design paradigms can be used either to describe a design solution, or as an approach to design problem solving.  Problem solving occurs through a process of abstraction and characterization of design solutions, with subsequent categorization into problem solving types.  The approach is akin to the use of metaphor in language; metaphors are used to help explain concepts that are new or unfamiliar, and to bridge between a problem we understand and a problem we don't.  Design paradigms then can be seen as higher order metaphors; as the often three-dimensional distillation of a working relationship between parts, between groups of things, between the known and the unknown.  In this sense, a bridge is a paradigm of the connection between the known and the unknown, and the functional equivalent of a physical bridge is consequently used in many fields from computer hardware to musical composition. The design paradigms concept has proven so powerful in traditional fields of design, that it has inspired a branch of computer science, where computational analogies to design paradigms are commonly called software design patterns.  Importantly however, in design professions the term "design pattern" usually describes a 2-dimensional structure, whereas the term "design paradigm" (or model) usually implies a higher order, having 3 or more dimensions.  