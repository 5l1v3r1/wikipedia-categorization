Eating your own dog food, also called dogfooding, is a slang term used to refer to a situation in which an organization uses its own product.  This can be a way for an organization to test its products in real-world usage. Hence dogfooding can act as quality control, and eventually a kind of testimonial advertising. Once in the market, dogfooding demonstrates confidence in the developers' own products.   InfoWorld commented that this needs to be transparent and honest: "watered-down examples, such as auto dealers' policy of making salespeople drive the brands they sell, or Coca-Cola allowing no Pepsi products in corporate offices ... are irrelevant."   In this sense, a corporate culture of not supporting the competitor is not the same as a philosophy of "eating your own dog food".  The latter focuses on the functional aspects of the company's own product. Dogfooding allows employees to test their company's products in real-life situations; a perceived, but still controversial, advantage beyond marketing,   which gives management a sense of how the product might be usedâ€”all before launch to consumers.  In software development, dogfooding can occur in multiple stages: first, a stable version of the software is used with just a single new feature added. Then, multiple new features can be combined into a single version of the software and tested together. This allows several validations before the software is released. The practice enables proactive resolution of potential inconsistency and dependency issues, especially when several developers or teams work on the same product. The risks of public dogfooding, specifically that a company may have difficulties using its own products, may reduce the frequency of publicized dogfooding.  In 1988, Microsoft manager Paul Maritz sent Brian Valentine, test manager for Microsoft LAN Manager, an email titled "Eating our own Dogfood", challenging him to increase internal usage of the company's product. From there, the usage of the term spread through the company.   Dave Cutler's February 1991 insistence on dogfooding in development of Windows NT at Microsoft was documented in Pascal Zachary's 1994 book, Showstopper! The Breakneck Race to Create Windows NT and the Next Generation at Microsoft. Microsoft developed the operating system on computers running NT daily builds, initially text only, then with graphics, and finally with networking. In 2006, the editor of IEEE Software recounted that in the 1970s, television advertisements for Alpo dog food, Lorne Greene pointed out that he fed Alpo to his own dogs. Another possible origin he remembers is from the president of Kal Kan Pet Food, who was said to eat a can of his dog food at shareholders' meetings.  There is also a British expression "Dog's Breakfast", which refers to making such a mess out of something (eg dinner) that it is unappealing and barely usable. In this context, "Eating Our Own Dogfood" means you will not run away from unpleasant work. Instead of "going out to dinner" you stay and choke down the mess -- thus making it disappear.  It is a metaphor for the tedious and unpleasant work of debugging a nearly finished product.    The development of Windows NT at Microsoft involved over 200 developers in small teams, and it was held together by Dave Cutler's February 1991 insistence on dogfooding. Microsoft developed the operating system on computers running NT daily builds. It was initially crash prone, but the immediate feedback of code breaking the build, the loss of pride, and the knowledge of impeding the work of others were all powerful motivators.   Windows developers would typically dogfood or self-host Windows starting from the early (alpha) builds, while the rest of the employees would start from the more stable beta builds that were also available to MSDN subscribers.  In 2005, Infoworld reported that a tour of Microsoft's network operations center "showed pretty much beyond a reasonable doubt that Microsoft does run its 20,000-plus node, international network on 99 percent Windows technology, including servers, workstations, and edge security".  InfoWorld argued that "Microsoft's use of Windows for its high-traffic operations tipped many doubters over to Windows' side of the fence."  Tom Yager, InfoWorld  In the mid-1990s, Microsoft's internal email system was initially developed around Unix. When asked why, they publicly moved to using Microsoft Exchange.  In 1997, an email storm known as the Bedlam DL3  incident made Microsoft build more robust features into Microsoft Exchange Server to avoid lost and duplicate emails and network and server down-time, although dogfooding is rarely so dramatic. A second email storm in 2006  was handled perfectly by the system. In 1999, Hewlett-Packard staff referred to a project using HP's own products as "Project Alpo".  Around the same time, Mozilla also practised dogfooding under that exact name.  Government green public procurement that allows testing of proposed environmental policies has been compared to dogfooding.  On 1 June 2011, YouTube added a license feature to its video uploading service allowing users to choose between a standard or Creative Commons license.   The license label was followed by the message (Shh! - Internal Dogfood) that appeared on all YouTube videos lacking commercial licensing.  A YouTube employee confirmed that this referred to products that are tested internally.  Forcing those who design products to actually use and rely on them is sometimes thought to improve quality and usability, but software developers may be blind to usability and may have knowledge to make software work that an end user will lack.  Microsoft's chief information officer noted in 2008 that, previously, "We tended not to go through the actual customer experience. We were always upgrading from a beta, not from production disk to production disk."  Dogfooding may happen too early to be viable, and those forced to use the products may assume that someone else has reported the problem or they may get used to applying workarounds. Dogfooding may be unrealistic, as customers will always have a choice of different companies' products to use together, and the product may not be used as intended. The process can lead to a loss of productivity and demoralisation,  or at its extreme to "Not Invented Here" syndrome, i.e. only using internal products.   In 1989, Donald Knuth published a paper recounting lessons from the development of his TeX Typesetting software, in which the benefits of the approach were mentioned:Thus, I came to the conclusion that the designer of a new system must not only be the implementor and the first large-scale user; the designer should also write the first user manual. The separation of any of these four components would have hurt TeX significantly. If I had not participated fully in all these activities, literally hundreds of improvements would never have been made, because I would never have thought of them or perceived why they were important.In 2007, Jo Hoppe, the CIO of Pegasystems, said that she uses the alternative phrase "drinking our own champagne".  Novell's head of public relations Bruce Lowry, commenting on his company's use of Linux and OpenOffice.org, said that he also prefers this phrase.  In 2009, the new CIO of Microsoft, Tony Scott, argued that the phrase "dogfooding" was unappealing and should be replaced by "icecreaming", with the aim of developing products as "ice cream that our customers want to consume".  A less controversial and common alternative term used in some contexts is self-hosting, where developers' workstations would, for instance, get updated automatically overnight to the latest daily build of the software or operating system on which they work. Developers of IBM's mainframe operating systems have long used the term "eating our own cooking". 