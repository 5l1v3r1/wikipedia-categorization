OpenOLAT is a web-based learning management system for teaching, education, assessment and communication. The name OpenOLAT stands for Open Online Learning And Training, highlighting its open source and online nature. OpenOLAT is open source software and is being developed by frentix GmbH since 2011. OpenOLAT is based on the LMS OLAT developed by the University of Zurich. OpenOLAT originated from the open source project OLAT. In 2011, the University of Zurich initiated a massive refactoring project with the goal of redesigning the complete code base and switching to the Mercurial version control system. With the start of the refactoring, repository access for contributors from the OLAT community was revoked, making further contributions impossible. Since then, the OLAT developers practice open source only in the form of publishing finished source code, but lack any kind of community involvement.  Because of these changes to OLAT, the OpenOLAT fork was initiated in 2011. OpenOLAT is an alternative to OLAT that follows an open development process and encourages community involvement.  The initiator of this new project is frentix GmbH, a spin-off of the University of Zurich, which was founded by one of the founders of OLAT and which provided commercial services for OLAT up to 2011. Since frentix was founded in 2006, the company has contributed major features to the OLAT code base and was responsible for a large part of the bug fixing. For commercial customers, frentix provided OLATpro until the end of 2011, which contained features that were not a part of the public release. With the inception of OpenOLAT, many of the frentix features from the pro OLATpro release were ported to the public OpenOLAT open source release.  In release 8.2, the group management system was significantly improved. Release 8.3 added the OpenMeetings integration, and release 8.4 brought major changes to the chat infrastructure while also improving the performance and stability of the whole system. Release 9.0 replaced the JavaScript framework ExtJS with the more light-weight jQuery, for which the whole JavaScript layer was refactored. In addition, the question pool was introduced, which allows collaborative creation and sharing of test questions. The most recent release, version 10.0, includes a complete redesign of all visual aspects of OpenOLAT. The introduction of a responsive design paradigm based on Bootstrap makes OpenOLAT ready for mobile devices and small screen sizes. Also, the learning resources were split up into spearate areas for learners and authors, making them more intuitive and easier to use. OpenOLAT offers a lot of features for learners and teachers. A set of building blocks allow teachers to create courses using a variety of didactic methods while incorporating communication, collaboration and assessment. More learning resources and tools are available outside of the course system. Learning resources can also be made available to non-registered users, so-called guests. Using different booking methods, courses can also be made available at a cost. OpenOLAT contains many elements typical for learning management systems: The course system is the central element in OpenOLAT. It is separated into areas for learners and authors. Users with author roles can create and manage courses and learning resources in the authoring environment. Using the various learning resources, many different learning scenarios can be represented in the integrated course editor, including areas for cooperation and collaboration. Learning resources can be created or imported, and can be integrated into one or even multiple courses by creating a reference. Changing a referenced learning resource changes it in all places where is used. Tests in OpenOLAT are used to quiz participants and to prepare them for final exams. Tests can be created and managed in the authoring environment or directly in the course editor. They can either be imported or created using the built-in QTI test editor. OpenOLAT supports the IMS-QTI format, version 1.2. The questionnaire learning resource is useful for surveys. With the assessment tool and the test statistics, tests and questionnaires can be evaluated. The assessment mode for courses allows authors to create exam settings in which tests and assessments are carried out in safe mode during a fixed time span. Adding IP addresses to a configuratioen enhances security. An assessment can be carried out in kiosk by adding the use of the Safe Exam Browser. Through the role based authorization system in OpenOLAT, coaches can assigned to courses, groups, or individual users. Social tools like blogs, forums, wikis, podcasts, shared folders, mail, and chat enable communication and collaboration between OpenOLAT users. Groups can be used for projects independently from courses, and can be created by learners themselves, depending on the system configuration. OpenOLAT supports different visibility and access rules to courses and other learning resources based on user roles and groups. The OpenOLAT Portal is the personalizable start page for users. Visibility and access modifiers can be made dependent on time, groups, or previous achievements. So-called expert rules allow fine-grained control over which users have access to which learning resources. This enables different configurations of a single course for different users. Rules can be applied to whole courses or individually to each learning resource in a course. OpenOLAT has a customizable portal page, that users can personalize and adjust to their liking. Several portlets can be individually displayed and configured. Further personal tools and settings are found in the extendable personal menu. Instead of the portal, different pages or courses can be set up as start pages. Start pages can be assigned to different users or user groups depending on their roles or attributes, such as field of study or institution. Additionally, each user can choose to override this setting with their own start page. OpenOLAT has its own authoring environment, in which courses, learning resources and course elements are combined into elearning courses. This environment allows easy management of all courses and learning resources. Courses have their own course editor for course-specific resource management and configuration. Courses are shared among OpenOLAT instances in a zip file. OpenOLAT contains its own content packaging and test editors, which create IMS content packages and QTI tests. CPs and tests created in OpenOLAT can be easily exported and imported into other LMS, that also support these standardized formats. System administrators manage OpenOLAT in the administration tab. There, the default language can be set, the layout can be changed, quota and versioning settings can be adjusted, and many other settings can be changed to adapt the system to a variety of use cases. In addition to the features contained in the public release, frentix offers some custom features to its customers. OpenOLAT is written in Java on top of the Servlet interfaces and runs on Windows, Mac OS X and Linux environments, typically on an Tomcat installation. It is developed and distributed under an Apache 2.0 open source license. UTF-8 support is built in, and well-known databases like MySQL and Postgres are supported. SSL is used to secure all data transactions with OpenOLAT. Due to historical reasons, OpenOLAT uses its own component-based MVC application framework. Hibernate is used as a database abstraction layer, Spring is used for configuration, Maven is used to support the build process, and Mercurial is used as revision control system. The user interface is written in HTML, CSS and JavaScript, and the built-in Ajax mechanism allows only those parts of the page that have changed to be refreshed. Because OpenOLAT is still a young LMS, there is not yet any independent literature. However, basic principles are shared with OLAT and therefore its literature can still be relevant to OpenOLAT. Since OpenOLAT was forked from OLAT 7.1,  literature from before the fork is at least still partially valid for OpenOLAT. 