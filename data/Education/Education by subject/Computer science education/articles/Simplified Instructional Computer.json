{"parse":{"title":"Simplified Instructional Computer","pageid":568646,"revid":857693229,"text":{"*":"<div class=\"mw-parser-output\"><table class=\"plainlinks metadata ambox ambox-content ambox-Unreferenced\" role=\"presentation\"><tbody><tr><td class=\"mbox-image\"><div style=\"width:52px\"><a href=\"/wiki/File:Question_book-new.svg\" class=\"image\"><img alt=\"\" src=\"//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png\" width=\"50\" height=\"39\" srcset=\"//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x\" data-file-width=\"512\" data-file-height=\"399\" /></a></div></td><td class=\"mbox-text\"><div class=\"mbox-text-span\">This article <b>does not <a href=\"/wiki/Wikipedia:Citing_sources\" title=\"Wikipedia:Citing sources\">cite</a> any <a href=\"/wiki/Wikipedia:Verifiability\" title=\"Wikipedia:Verifiability\">sources</a></b>.<span class=\"hide-when-compact\"> Please help <a class=\"external text\" href=\"//en.wikipedia.org/w/index.php?title=Simplified_Instructional_Computer&amp;action=edit\">improve this article</a> by <a href=\"/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1\" title=\"Help:Introduction to referencing with Wiki Markup/1\">adding citations to reliable sources</a>. Unsourced material may be challenged and <a href=\"/wiki/Wikipedia:Verifiability#Burden_of_evidence\" title=\"Wikipedia:Verifiability\">removed</a>.</span>  <small><i>(December 2009)</i></small><small class=\"hide-when-compact\"><i> (<a href=\"/wiki/Help:Maintenance_template_removal\" title=\"Help:Maintenance template removal\">Learn how and when to remove this template message</a>)</i></small></div></td></tr></tbody></table>\n<p>The <b>Simplified Instructional Computer</b> (also abbreviated SIC) is a hypothetical <a href=\"/wiki/Computer\" title=\"Computer\">computer</a> system introduced in <i>System Software: An Introduction to Systems Programming</i>, by Leland Beck. Due to the fact that most modern microprocessors include subtle, complex functions for the purposes of efficiency, it can be difficult to learn systems programming using a real-world system. The Simplified Instructional Computer solves this by abstracting away these complex behaviors in favor of an architecture that is clear and accessible for those wanting to learn systems programming.\n</p>\n<div id=\"toc\" class=\"toc\"><input type=\"checkbox\" role=\"button\" id=\"toctogglecheckbox\" class=\"toctogglecheckbox\" style=\"display:none\" /><div class=\"toctitle\" lang=\"en\" dir=\"ltr\"><h2>Contents</h2><span class=\"toctogglespan\"><label class=\"toctogglelabel\" for=\"toctogglecheckbox\"></label></span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#SIC_Architecture\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">SIC Architecture</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"#Addressing_Modes_for_SIC_and_SIC/XE\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Addressing Modes for SIC and SIC/XE</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"><a href=\"#Addressing_Modes_for_SIC/XE\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">Addressing Modes for SIC/XE</span></a></li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"#SIC_Assembly_Syntax\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">SIC Assembly Syntax</span></a></li>\n<li class=\"toclevel-1 tocsection-5\"><a href=\"#Sample_program\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">Sample program</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"#Emulating_the_SIC_System\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">Emulating the SIC System</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"#See_also\"><span class=\"tocnumber\">7</span> <span class=\"toctext\">See also</span></a></li>\n<li class=\"toclevel-1 tocsection-8\"><a href=\"#References\"><span class=\"tocnumber\">8</span> <span class=\"toctext\">References</span></a></li>\n<li class=\"toclevel-1 tocsection-9\"><a href=\"#External_links\"><span class=\"tocnumber\">9</span> <span class=\"toctext\">External links</span></a></li>\n</ul>\n</div>\n\n<h2><span class=\"mw-headline\" id=\"SIC_Architecture\">SIC Architecture</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Simplified_Instructional_Computer&amp;action=edit&amp;section=1\" title=\"Edit section: SIC Architecture\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>The SIC machine has basic addressing, storing most memory addresses hexadecimal integer format. Similar to most modern computing systems, the SIC architecture stores all data in binary and uses the <a href=\"/wiki/Two%27s_complement\" title=\"Two&#39;s complement\">two's complement</a> to represent negative values at the machine level. Memory storage in SIC consists of 8-bit bytes, and all memory addresses in SIC are byte addresses. Any three consecutive bytes form a 24-bit 'word' value, addressed by the location of the lowest numbered byte in the word value. Numeric values are stored as word values, and character values use the 8-bit <a href=\"/wiki/ASCII\" title=\"ASCII\">ASCII</a> system. The SIC machine does not support floating-point hardware and have at most 32,768 bytes of memory. There is also a more complicated machine built on top of SIC called the Simplified Instruction Computer with Extra Equipment (SIC/XE). The XE expansion of SIC adds a 48-bit floating point data type, an additional memory addressing mode, and extra memory (1 megabyte instead of 32,768 bytes) to the original machine. All SIC assembly code is upwards compatible with SIC/XE.\n</p><p>SIC machines have several registers, each 24 bits long and having both a numeric and character representation:\n</p>\n<dl><dd><ul><li><b>A (0)</b>: Used for basic arithmetic operations; known as the accumulator register.</li>\n<li><b>X (1)</b>: Stores and calculates addresses; known as the index register.</li>\n<li><b>L (2)</b>: Used for jumping to specific memory addresses and storing return addresses; known as the linkage register.</li>\n<li><b>PC (8)</b>: Contains the address of the next instruction to execute; known as the program counter register.</li>\n<li><b>SW (9)</b>: Contains a variety of information, such as carry or overflow flags; known as the status word register.</li></ul></dd></dl>\n<p>In addition to the standard SIC registers, there are also four additional general-purpose registers specific to the SIC/XE machine:\n</p>\n<dl><dd><ul><li><b>B (3)</b>: Used for addressing; known as the base register.</li>\n<li><b>S (4)</b>: No special use, general purpose register.</li>\n<li><b>T (5)</b>: No special use, general purpose register.</li>\n<li><b>F (6)</b>: Floating point accumulator register (This register is 48-bits instead of 24).</li></ul></dd></dl>\n<p>These five/nine registers allow the SIC or SIC/XE machine to perform most simple tasks in a customized assembly language. In the System Software book, this is used with a theoretical series of operation codes to aid in the understanding of assemblers and linker-loaders required for the execution of <a href=\"/wiki/Assembly_language\" title=\"Assembly language\">assembly language</a> code.\n</p>\n<h2><span id=\"Addressing_Modes_for_SIC_and_SIC.2FXE\"></span><span class=\"mw-headline\" id=\"Addressing_Modes_for_SIC_and_SIC/XE\">Addressing Modes for SIC and SIC/XE</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Simplified_Instructional_Computer&amp;action=edit&amp;section=2\" title=\"Edit section: Addressing Modes for SIC and SIC/XE\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>The Simplified Instruction Computer has three instruction formats, and the Extra Equipment add-on includes a fourth. The instruction formats provide a model for memory and data management. Each format has a different representation in memory:\n</p>\n<dl><dd><ul><li><b>Format 1</b>: Consists of 8 bits of allocated memory to store instructions.</li>\n<li><b>Format 2</b>: Consists of 16 bits of allocated memory to store 8 bits of instructions and two 4-bits segments to store operands.</li>\n<li><b>Format 3</b>: Consists of 6 bits to store an instruction, 6 bits of flag values, and 12 bits of displacement.</li>\n<li><b>Format 4</b>: Only valid on SIC/XE machines, consists of the same elements as format 3, but instead of a 12-bit displacement, stores a 20-bit address.</li></ul></dd></dl>\n<p>Both format 3 and format 4 have six-bit flag values in them, consisting of the following flag bits:\n</p>\n<dl><dd><ul><li><b>n</b>: Indirect addressing flag</li>\n<li><b>i</b>: Immediate addressing flag</li>\n<li><b>x</b>: Indexed addressing flag</li>\n<li><b>b</b>: Base address-relative flag</li>\n<li><b>p</b>: Program counter-relative flag</li>\n<li><b>e</b>: Format 4 instruction flag</li></ul></dd></dl>\n<h2><span id=\"Addressing_Modes_for_SIC.2FXE\"></span><span class=\"mw-headline\" id=\"Addressing_Modes_for_SIC/XE\">Addressing Modes for SIC/XE</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Simplified_Instructional_Computer&amp;action=edit&amp;section=3\" title=\"Edit section: Addressing Modes for SIC/XE\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul><li>Rule 1:\n<dl><dd>e = 0&#160;: format 3</dd>\n<dd>e = 1&#160;: format 4</dd></dl>\n<ul><li>format 3:\n<dl><dd>b = 1, p = 0    (base relative)</dd>\n<dd>b = 0, p = 1    (pc relative)</dd>\n<dd>b = 0, p = 0    (direct addressing)</dd></dl></li>\n<li>format 4:\n<dl><dd>b = 0, p = 0    (direct addressing)</dd>\n<dd>x = 1    (index)</dd>\n<dd>i = 1, n = 0    (immediate)</dd>\n<dd>i = 0, n = 1    (indirect)</dd>\n<dd>i = 0, n = 0    (SIC)</dd>\n<dd>i = 1, n = 1    (SIC/XE for SIC compatible)</dd></dl></li></ul></li>\n<li>Rule 2:\n<dl><dd>i = 0, n =0\t(SIC)</dd>\n<dd>b, p, e is part of the address.</dd></dl></li></ul>\n<h2><span class=\"mw-headline\" id=\"SIC_Assembly_Syntax\">SIC Assembly Syntax</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Simplified_Instructional_Computer&amp;action=edit&amp;section=4\" title=\"Edit section: SIC Assembly Syntax\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>SIC uses a special assembly language with its own operation codes that hold the hex values needed to assemble and execute programs. A sample program is provided below to get an idea of what a SIC program might look like. In the code below, there are three columns. The first column represents a forwarded symbol that will store its location in memory. The second column denotes either a SIC instruction (opcode) or a constant value (BYTE or WORD). The third column takes the symbol value obtained by going through the first column and uses it to run the operation specified in the second column. This process creates an object code, and all the object codes are put into an object file to be run by the SIC machine.\n</p><p><code>\n</code></p><code><pre>      COPY   START  1000<br />\n      FIRST  STL    RETADR<br />\n      CLOOP  JSUB   RDREC<br />\n             LDA    LENGTH<br />\n             COMP   ZERO<br />\n             JEQ    ENDFIL<br />\n             JSUB   WRREC<br />\n             J      CLOOP<br />\n      ENDFIL LDA    EOF<br />\n             STA    BUFFER<br />\n             LDA    THREE<br />\n             STA    LENGTH<br />\n             JSUB   WRREC<br />\n             LDL    RETADR<br />\n             RSUB<br />\n      EOF    BYTE   C'EOF'<br />\n      THREE  WORD   3<br />\n      ZERO   WORD   0<br />\n      RETADR RESW   1<br />\n      LENGTH RESW   1<br />\n      BUFFER RESB   4096<br />\n      .<br />\n      .      SUBROUTINE TO READ RECORD INTO BUFFER<br />\n      .<br />\n      RDREC  LDX    ZERO<br />\n             LDA    ZERO<br />\n      RLOOP  TD     INPUT<br />\n             JEQ    RLOOP<br />\n             RD     INPUT<br />\n             COMP   ZERO<br />\n             JEQ    EXIT<br />\n             STCH   BUFFER,X<br />\n             TIX    MAXLEN<br />\n             JLT    RLOOP<br />\n      EXIT   STX    LENGTH<br />\n             RSUB<br />\n      INPUT  BYTE   X'F1'<br />\n      MAXLEN WORD   4096<br />\n      .<br />\n      .      SUBROUTINE TO WRITE RECORD FROM BUFFER<br />\n      .<br />\n      WRREC  LDX    ZERO<br />\n      WLOOP  TD     OUTPUT<br />\n             JEQ    WLOOP<br />\n             LDCH   BUFFER,X<br />\n             WD     OUTPUT<br />\n             TIX    LENGTH<br />\n             JLT    WLOOP<br />\n             RSUB<br />\n      OUTPUT BYTE   X'06'<br />\n             END    FIRST<br />\n</pre></code><code></code><p><code></code>\n</p><p>If you were to assemble this program, you would get the object code depicted below. The beginning of each line consists of a record type and hex values for memory locations. For example, the top line is an 'H' record, the first 6 hex digits signify its relative starting location, and the last 6 hex digits represent the program's size. The lines throughout are similar, with each 'T' record consisting of 6 hex digits to signify that line's starting location, 2 hex digits to indicate the size (in bytes) of the line, and the object codes that were created during the assembly process.\n</p><p><code>\n</code></p><code><pre>      HCOPY 00100000107A\n      T0010001E1410334820390010362810303010154820613C100300102A0C103900102D\n      T00101E150C10364820610810334C0000454F46000003000000\n      T0020391E041030001030E0205D30203FD8205D2810303020575490392C205E38203F\n      T0020571C1010364C0000F1001000041030E02079302064509039DC20792C1036\n      T002073073820644C000006\n      E001000\n</pre></code><code></code><p><code></code>\n</p>\n<h2><span class=\"mw-headline\" id=\"Sample_program\">Sample program</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Simplified_Instructional_Computer&amp;action=edit&amp;section=5\" title=\"Edit section: Sample program\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Given below is a program illustrating data movement in SIC.\n</p><p><code>LDA FIVE<br />\nSTA ALPHA<br />\nLDCH CHARZ<br />\nSTCH C1<br />\n<br />\nALPHA RESW 1<br />\nFIVE WORD 5<br />\nCHARZ BYTE C'Z'<br />\nC1 RESB 1</code>\n</p>\n<h2><span class=\"mw-headline\" id=\"Emulating_the_SIC_System\">Emulating the SIC System</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Simplified_Instructional_Computer&amp;action=edit&amp;section=6\" title=\"Edit section: Emulating the SIC System\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Since the SIC and SIC/XE machines are not real machines, the task of actually constructing a SIC emulator is often part of coursework in a systems programming class. The purpose of SIC is to teach introductory-level systems programmers or collegiate students how to write and assemble code below higher-level languages like C and C++. With that being said, there are some sources of SIC-emulating programs across the web, however infrequent they may be.\n</p>\n<dl><dd><ul><li>An assembler and a simulator written by the author, Leland in Pascal is available on his educational home page at <a rel=\"nofollow\" class=\"external free\" href=\"ftp://rohan.sdsu.edu/faculty/beck\">ftp://rohan.sdsu.edu/faculty/beck</a><sup class=\"noprint Inline-Template\"><span style=\"white-space: nowrap;\">&#91;<i><a href=\"/wiki/Wikipedia:Link_rot\" title=\"Wikipedia:Link rot\"><span title=\"&#160;Dead link since September 2018\">permanent dead link</span></a></i>&#93;</span></sup></li>\n<li>SIC/XE Simulator And Assembler downloadable at <a rel=\"nofollow\" class=\"external free\" href=\"https://sites.google.com/site/sarimohsultan/Projects/sic-xe-simulator-and-assembler\">https://sites.google.com/site/sarimohsultan/Projects/sic-xe-simulator-and-assembler</a></li>\n<li>SIC Emulator, Assembler and some example programs written for SIC downloadable at <a rel=\"nofollow\" class=\"external free\" href=\"http://sicvm.sourceforge.net/home.php\">http://sicvm.sourceforge.net/home.php</a></li>\n<li>SicTools - virtual machine, simulator, assembler and linker for the SIC/XE computer available at <a rel=\"nofollow\" class=\"external free\" href=\"https://jurem.github.io/SicTools/\">https://jurem.github.io/SicTools/</a></li></ul></dd></dl>\n<p><br />\n</p>\n<h2><span class=\"mw-headline\" id=\"See_also\">See also</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Simplified_Instructional_Computer&amp;action=edit&amp;section=7\" title=\"Edit section: See also\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul><li><a href=\"/wiki/Computer\" title=\"Computer\">Computer</a></li>\n<li><a href=\"/wiki/MIX\" title=\"MIX\">MIX</a></li>\n<li><a href=\"/wiki/System_software\" title=\"System software\">System software</a></li>\n<li><a href=\"/wiki/Assembly_language\" title=\"Assembly language\">Assembly language</a></li>\n<li><a href=\"/wiki/Processor_register\" title=\"Processor register\">Processor register</a></li>\n<li><a href=\"/wiki/Virtual_machine\" title=\"Virtual machine\">Virtual machine</a></li></ul>\n<h2><span class=\"mw-headline\" id=\"References\">References</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Simplified_Instructional_Computer&amp;action=edit&amp;section=8\" title=\"Edit section: References\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<div class=\"reflist\" style=\"list-style-type: decimal;\">\n</div>\n<ul><li><cite id=\"CITEREFBeck1996\" class=\"citation\"><a href=\"/w/index.php?title=Leland_L._Beck&amp;action=edit&amp;redlink=1\" class=\"new\" title=\"Leland L. Beck (page does not exist)\">Beck, Leland</a> (1996), <i>System Software: An Introduction to Systems Programming</i> (3 ed.), Addison-Wesley, <a href=\"/wiki/International_Standard_Book_Number\" title=\"International Standard Book Number\">ISBN</a>&#160;<a href=\"/wiki/Special:BookSources/0-201-42300-6\" title=\"Special:BookSources/0-201-42300-6\">0-201-42300-6</a></cite><span title=\"ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=System+Software%3A+An+Introduction+to+Systems+Programming&amp;rft.edition=3&amp;rft.pub=Addison-Wesley&amp;rft.date=1996&amp;rft.isbn=0-201-42300-6&amp;rft.aulast=Beck&amp;rft.aufirst=Leland&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASimplified+Instructional+Computer\" class=\"Z3988\"><span style=\"display:none;\">&#160;</span></span></li>\n<li>Information of SIC and SIC/XE systems: <a rel=\"nofollow\" class=\"external free\" href=\"https://web.archive.org/web/20121114101742/http://www-rohan.sdsu.edu/~stremler/2003_CS530/SicArchitecture.html\">https://web.archive.org/web/20121114101742/http://www-rohan.sdsu.edu/~stremler/2003_CS530/SicArchitecture.html</a></li>\n<li>List of SIC and SIC/XE instructions: <a rel=\"nofollow\" class=\"external free\" href=\"http://solomon.ipv6.club.tw/~solomon/Course/SP.941/sic-instruction.html\">http://solomon.ipv6.club.tw/~solomon/Course/SP.941/sic-instruction.html</a></li>\n<li>Brief memory addressing information: <a rel=\"nofollow\" class=\"external free\" href=\"http://www.unf.edu/~cwinton/html/cop3601/s10/class.notes/basic4-SICfmts.pdf\">http://www.unf.edu/~cwinton/html/cop3601/s10/class.notes/basic4-SICfmts.pdf</a></li>\n<li>SIC/XE Mode Addressing: <a rel=\"nofollow\" class=\"external free\" href=\"http://uhost.rmutp.ac.th/wanapun.w/--j--/ch2-2.pdf\">http://uhost.rmutp.ac.th/wanapun.w/--j--/ch2-2.pdf</a><sup class=\"noprint Inline-Template\"><span style=\"white-space: nowrap;\">&#91;<i><a href=\"/wiki/Wikipedia:Link_rot\" title=\"Wikipedia:Link rot\"><span title=\"&#160;Dead link since May 2018\">permanent dead link</span></a></i>&#93;</span></sup></li></ul>\n<h2><span class=\"mw-headline\" id=\"External_links\">External links</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Simplified_Instructional_Computer&amp;action=edit&amp;section=9\" title=\"Edit section: External links\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul><li><a rel=\"nofollow\" class=\"external text\" href=\"http://sourceforge.net/projects/sicvm/\">SICvm</a> A Virtual Machine based on a Simplified Instructional Computer (SIC)</li></ul>\n\n<!-- \nNewPP limit report\nParsed by mw1315\nCached time: 20180902113124\nCache expiry: 1900800\nDynamic content: false\nCPU time usage: 0.140 seconds\nReal time usage: 0.184 seconds\nPreprocessor visited node count: 439/1000000\nPreprocessor generated node count: 0/1500000\nPost\u2010expand include size: 10330/2097152 bytes\nTemplate argument size: 1232/2097152 bytes\nHighest expansion depth: 11/40\nExpensive parser function count: 3/500\nUnstrip recursion depth: 0/20\nUnstrip post\u2010expand size: 0/5000000 bytes\nNumber of Wikibase entities loaded: 0/400\nLua time usage: 0.060/10.000 seconds\nLua memory usage: 2.1 MB/50 MB\n-->\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%  153.280      1 -total\n 42.17%   64.643      1 Template:Unreferenced\n 32.54%   49.874      1 Template:Citation\n 27.14%   41.595      1 Template:Ambox\n 15.47%   23.705      2 Template:Dead_link\n 12.10%   18.554      2 Template:Fix\n  9.75%   14.951      4 Template:Category_handler\n  9.37%   14.368      1 Template:Reflist\n  3.68%    5.642      2 Template:Fix/category\n  2.01%    3.085      1 Template:Main_other\n-->\n\n<!-- Saved in parser cache with key enwiki:pcache:idhash:568646-0!canonical and timestamp 20180902113124 and revision id 857693229\n -->\n</div>"},"langlinks":[{"lang":"mn","url":"https://mn.wikipedia.org/wiki/%D0%A5%D1%8F%D0%BB%D0%B1%D0%B0%D1%80%D1%88%D1%83%D1%83%D0%BB%D1%81%D0%B0%D0%BD_%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D1%82%D0%B0%D0%B9_%D0%BA%D0%BE%D0%BC%D0%BF%D1%8C%D1%8E%D1%82%D0%B5%D1%80","langname":"Mongolian","autonym":"\u043c\u043e\u043d\u0433\u043e\u043b","*":"\u0425\u044f\u043b\u0431\u0430\u0440\u0448\u0443\u0443\u043b\u0441\u0430\u043d \u043a\u043e\u043c\u0430\u043d\u0434\u0442\u0430\u0439 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440"},{"lang":"zh","url":"https://zh.wikipedia.org/wiki/%E7%B0%A1%E5%8C%96%E6%8C%87%E4%BB%A4%E8%A8%88%E7%AE%97%E6%A9%9F","langname":"Chinese","autonym":"\u4e2d\u6587","*":"\u7c21\u5316\u6307\u4ee4\u8a08\u7b97\u6a5f"}],"categories":[{"sortkey":"","hidden":"","*":"Articles_lacking_sources_from_December_2009"},{"sortkey":"","hidden":"","*":"All_articles_lacking_sources"},{"sortkey":"","hidden":"","*":"All_articles_with_dead_external_links"},{"sortkey":"","hidden":"","*":"Articles_with_dead_external_links_from_September_2018"},{"sortkey":"","hidden":"","*":"Articles_with_permanently_dead_external_links"},{"sortkey":"","hidden":"","*":"Articles_with_dead_external_links_from_May_2018"},{"sortkey":"","*":"Educational_abstract_machines"},{"sortkey":"","*":"Computer_science_education"}],"links":[{"ns":14,"exists":"","*":"Category:Articles lacking sources from December 2009"},{"ns":14,"exists":"","*":"Category:Articles with dead external links from September 2018"},{"ns":14,"exists":"","*":"Category:Articles with dead external links from May 2018"},{"ns":0,"exists":"","*":"ASCII"},{"ns":0,"exists":"","*":"Assembly language"},{"ns":0,"exists":"","*":"Computer"},{"ns":0,"exists":"","*":"International Standard Book Number"},{"ns":0,"exists":"","*":"MIX"},{"ns":0,"exists":"","*":"Processor register"},{"ns":0,"exists":"","*":"System software"},{"ns":0,"exists":"","*":"Two's complement"},{"ns":0,"exists":"","*":"Virtual machine"},{"ns":0,"*":"Leland L. Beck"},{"ns":4,"exists":"","*":"Wikipedia:Citing sources"},{"ns":4,"exists":"","*":"Wikipedia:Link rot"},{"ns":4,"exists":"","*":"Wikipedia:Verifiability"},{"ns":12,"exists":"","*":"Help:Introduction to referencing with Wiki Markup/1"},{"ns":12,"exists":"","*":"Help:Maintenance template removal"}],"templates":[{"ns":10,"exists":"","*":"Template:Unreferenced"},{"ns":10,"exists":"","*":"Template:Ambox"},{"ns":10,"exists":"","*":"Template:Dead link"},{"ns":10,"exists":"","*":"Template:Fix"},{"ns":10,"exists":"","*":"Template:Category handler"},{"ns":10,"exists":"","*":"Template:Fix/category"},{"ns":10,"exists":"","*":"Template:Reflist"},{"ns":10,"exists":"","*":"Template:Main other"},{"ns":10,"exists":"","*":"Template:Citation"},{"ns":828,"exists":"","*":"Module:Unsubst"},{"ns":828,"exists":"","*":"Module:Message box"},{"ns":828,"exists":"","*":"Module:No globals"},{"ns":828,"exists":"","*":"Module:Yesno"},{"ns":828,"exists":"","*":"Module:Arguments"},{"ns":828,"exists":"","*":"Module:Message box/configuration"},{"ns":828,"exists":"","*":"Module:Category handler"},{"ns":828,"exists":"","*":"Module:Category handler/data"},{"ns":828,"exists":"","*":"Module:Category handler/config"},{"ns":828,"exists":"","*":"Module:Category handler/shared"},{"ns":828,"exists":"","*":"Module:Category handler/blacklist"},{"ns":828,"exists":"","*":"Module:Namespace detect/data"},{"ns":828,"exists":"","*":"Module:Namespace detect/config"},{"ns":828,"exists":"","*":"Module:Check for unknown parameters"},{"ns":828,"exists":"","*":"Module:Citation/CS1"},{"ns":828,"exists":"","*":"Module:Citation/CS1/Configuration"},{"ns":828,"exists":"","*":"Module:Citation/CS1/Whitelist"},{"ns":828,"exists":"","*":"Module:Citation/CS1/Utilities"},{"ns":828,"exists":"","*":"Module:Citation/CS1/Date validation"},{"ns":828,"exists":"","*":"Module:Citation/CS1/Identifiers"},{"ns":828,"exists":"","*":"Module:Citation/CS1/COinS"}],"images":["Question_book-new.svg"],"externallinks":["http://sourceforge.net/projects/sicvm/","ftp://rohan.sdsu.edu/faculty/beck","https://sites.google.com/site/sarimohsultan/Projects/sic-xe-simulator-and-assembler","http://sicvm.sourceforge.net/home.php","https://jurem.github.io/SicTools/","https://web.archive.org/web/20121114101742/http://www-rohan.sdsu.edu/~stremler/2003_CS530/SicArchitecture.html","http://solomon.ipv6.club.tw/~solomon/Course/SP.941/sic-instruction.html","http://www.unf.edu/~cwinton/html/cop3601/s10/class.notes/basic4-SICfmts.pdf","http://uhost.rmutp.ac.th/wanapun.w/--j--/ch2-2.pdf"],"sections":[{"toclevel":1,"level":"2","line":"SIC Architecture","number":"1","index":"1","fromtitle":"Simplified_Instructional_Computer","byteoffset":722,"anchor":"SIC_Architecture"},{"toclevel":1,"level":"2","line":"Addressing Modes for SIC and SIC/XE","number":"2","index":"2","fromtitle":"Simplified_Instructional_Computer","byteoffset":3182,"anchor":"Addressing_Modes_for_SIC_and_SIC/XE"},{"toclevel":1,"level":"2","line":"Addressing Modes for SIC/XE","number":"3","index":"3","fromtitle":"Simplified_Instructional_Computer","byteoffset":4273,"anchor":"Addressing_Modes_for_SIC/XE"},{"toclevel":1,"level":"2","line":"SIC Assembly Syntax","number":"4","index":"4","fromtitle":"Simplified_Instructional_Computer","byteoffset":4756,"anchor":"SIC_Assembly_Syntax"},{"toclevel":1,"level":"2","line":"Sample program","number":"5","index":"5","fromtitle":"Simplified_Instructional_Computer","byteoffset":8055,"anchor":"Sample_program"},{"toclevel":1,"level":"2","line":"Emulating the SIC System","number":"6","index":"6","fromtitle":"Simplified_Instructional_Computer","byteoffset":8271,"anchor":"Emulating_the_SIC_System"},{"toclevel":1,"level":"2","line":"See also","number":"7","index":"7","fromtitle":"Simplified_Instructional_Computer","byteoffset":9373,"anchor":"See_also"},{"toclevel":1,"level":"2","line":"References","number":"8","index":"8","fromtitle":"Simplified_Instructional_Computer","byteoffset":9505,"anchor":"References"},{"toclevel":1,"level":"2","line":"External links","number":"9","index":"9","fromtitle":"Simplified_Instructional_Computer","byteoffset":10260,"anchor":"External_links"}],"parsewarnings":[],"displaytitle":"Simplified Instructional Computer","iwlinks":[],"properties":[{"name":"wikibase_item","*":"Q4879217"}]}}