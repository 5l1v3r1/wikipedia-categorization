{"parse":{"title":"ProgramByDesign","pageid":3350103,"revid":860352048,"text":{"*":"<div class=\"mw-parser-output\"><table class=\"plainlinks metadata ambox ambox-content ambox-Refimprove\" role=\"presentation\"><tbody><tr><td class=\"mbox-image\"><div style=\"width:52px\"><a href=\"/wiki/File:Question_book-new.svg\" class=\"image\"><img alt=\"\" src=\"//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png\" width=\"50\" height=\"39\" srcset=\"//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x\" data-file-width=\"512\" data-file-height=\"399\" /></a></div></td><td class=\"mbox-text\"><div class=\"mbox-text-span\">This article <b>needs additional citations for <a href=\"/wiki/Wikipedia:Verifiability\" title=\"Wikipedia:Verifiability\">verification</a></b>.<span class=\"hide-when-compact\"> Please help <a class=\"external text\" href=\"//en.wikipedia.org/w/index.php?title=ProgramByDesign&amp;action=edit\">improve this article</a> by <a href=\"/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1\" title=\"Help:Introduction to referencing with Wiki Markup/1\">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.</span>  <small><i>(September 2011)</i></small><small class=\"hide-when-compact\"><i> (<a href=\"/wiki/Help:Maintenance_template_removal\" title=\"Help:Maintenance template removal\">Learn how and when to remove this template message</a>)</i></small></div></td></tr></tbody></table>\n<p>The <b>ProgramByDesign project</b>, formerly known as <b>TeachScheme! project</b>, is an outreach effort of the <a href=\"/wiki/Racket_(programming_language)\" title=\"Racket (programming language)\">PLT</a>\nresearch group. The goal is to train college faculty, high school teachers and\npossibly even middle school teachers in programming and computing.\n</p>\n<div id=\"toc\" class=\"toc\"><input type=\"checkbox\" role=\"button\" id=\"toctogglecheckbox\" class=\"toctogglecheckbox\" style=\"display:none\" /><div class=\"toctitle\" lang=\"en\" dir=\"ltr\"><h2>Contents</h2><span class=\"toctogglespan\"><label class=\"toctogglelabel\" for=\"toctogglecheckbox\"></label></span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#History\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">History</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"#Functional_Programming,_Computing_and_Algebra\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Functional Programming, Computing and Algebra</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"><a href=\"#Functional_Programming,_Computing_and_Design_in_Programming_101\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">Functional Programming, Computing and Design in Programming 101</span></a></li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"#ProgramByDesign_and_choice_of_programming_language\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">ProgramByDesign and choice of programming language</span></a></li>\n<li class=\"toclevel-1 tocsection-5\"><a href=\"#ProgramByDesign_for_Java\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">ProgramByDesign for Java</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"#ProgramByDesign_and_Bootstrap\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">ProgramByDesign and Bootstrap</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"#References\"><span class=\"tocnumber\">7</span> <span class=\"toctext\">References</span></a></li>\n<li class=\"toclevel-1 tocsection-8\"><a href=\"#External_links\"><span class=\"tocnumber\">8</span> <span class=\"toctext\">External links</span></a></li>\n</ul>\n</div>\n\n<h2><span class=\"mw-headline\" id=\"History\">History</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=ProgramByDesign&amp;action=edit&amp;section=1\" title=\"Edit section: History\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p><a href=\"/wiki/Matthias_Felleisen\" title=\"Matthias Felleisen\">Matthias Felleisen</a> and <a href=\"/wiki/Racket_(programming_language)\" title=\"Racket (programming language)\">PLT</a> started the effort in 1995 (January, one day after the POPL symposium)\nin response to observations of his Rice freshmen students and the algebra curriculum\nof local public schools. His objective was to use functional programming to bring\nmathematics alive and to help inject design knowledge into the introductory\n<a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a> <a href=\"/wiki/Curriculum\" title=\"Curriculum\">curriculum</a>.\n</p><p>The group raised funds from several private foundations, the US Department of Education, and the National Science Foundation to create \n</p>\n<ul><li>software appropriate for novices in functional programming</li>\n<li>courseware (curricula, lecture notes, exercises, mini-projects)</li>\n<li>teacher training camps.</li></ul>\n<p>Over ten years, it ran several dozen one-week workshops for some 550 teachers.  In\n2005, the TeachScheme! project ran an Anniversary workshop where two dozen teachers\npresented their work with students.\n</p><p>In 2010, <a href=\"/wiki/Racket_(programming_language)\" title=\"Racket (programming language)\">PLT</a> renamed its major programming language <a href=\"/wiki/Racket_(programming_language)\" title=\"Racket (programming language)\">Racket</a>.  At the same time, the group renamed  DrScheme to <a href=\"/wiki/DrRacket\" class=\"mw-redirect\" title=\"DrRacket\">DrRacket</a> and a little later TeachScheme! to ProgramByDesign.\n</p>\n<h2><span id=\"Functional_Programming.2C_Computing_and_Algebra\"></span><span class=\"mw-headline\" id=\"Functional_Programming,_Computing_and_Algebra\">Functional Programming, Computing and Algebra</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=ProgramByDesign&amp;action=edit&amp;section=2\" title=\"Edit section: Functional Programming, Computing and Algebra\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>The starting point of ProgramByDesign is the observation that students act as computers in\ngrade school courses on arithmetic and middle/high school courses on\npre/algebra. Teachers program them with rules and run specific problems via\nexercises. The key is that students execute purely functional programs.\n</p><p>If we can turn students into teachers that create functional programs and run them\non computers, we can reinforce this content and show students how writing down\nmathematics and how writing down functional programs creates lively animated scenes\nand even computer games.\n</p><p>Here is an example: \n</p>\n<div class=\"mw-highlight mw-content-ltr\" dir=\"ltr\"><pre><span></span><span class=\"p\">(</span><span class=\"k\">require</span> <span class=\"n\">2htdp/universe</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"k\">require</span> <span class=\"n\">2htdp/image</span><span class=\"p\">)</span>\n\n<span class=\"c1\">;; create an image from the current time </span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"p\">(</span><span class=\"n\">create-image</span> <span class=\"n\">t</span><span class=\"p\">)</span> \n   <span class=\"p\">(</span><span class=\"n\">place-image</span> <span class=\"n\">APPLE</span> <span class=\"mi\">50</span> <span class=\"p\">(</span><span class=\"nb\">*</span> <span class=\"m\">1/10</span> <span class=\"n\">t</span> <span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"n\">SPACE</span><span class=\"p\">))</span>\n\n<span class=\"c1\">;; names for basic images </span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"n\">APPLE</span> <span class=\"p\">(</span><span class=\"n\">circle</span> <span class=\"mi\">3</span> <span class=\"s2\">&quot;solid&quot;</span>  <span class=\"s2\">&quot;red&quot;</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"n\">SPACE</span> <span class=\"p\">(</span><span class=\"n\">empty-scene</span> <span class=\"mi\">100</span> <span class=\"mi\">100</span><span class=\"p\">))</span>\n\n<span class=\"p\">(</span><span class=\"n\">animate</span> <span class=\"n\">create-image</span><span class=\"p\">)</span>\n</pre></div>\n<p>This short program simulates an apple falling from the top to the bottom of a\nsmall white canvas. It consists of three parts: \n</p>\n<ul><li>a function definition for create-image, which is a one-line function in mathematics, assuming an algebra of images with place-image, circle, and empty-scene have been introduced;</li>\n<li>two abbreviations, where names are equated with some value, just as in \"let x be 5\" in an algebra text; and</li>\n<li>one line for running the program.</li></ul>\n<p>A teacher can explain create-image as easily as any ordinary function in an algebra\ncourse. For example, one can first draw a table with two rows and <i>n</i>\ncolumns where each column contains <i>t</i> at the top and an appropriate image at\nthe bottom. That is, if the numbers increase from left to right, then on each image the\nred dot is a little bit lower.\n</p><p>Finally the animate line applies the given function, create-image, at the\nrate of 28 ticks per second to 0, 1, 2, 3, and so on. The resulting images are \ndisplayed on the computer monitor at the same pace. That's how movies are made.\n</p><p>The background needed for such an example is little more than knowledge about making\nmovies, about the algebra of pictures in <a href=\"/wiki/DrRacket\" class=\"mw-redirect\" title=\"DrRacket\">DrRacket</a> (which is like the one for\nnumbers), and minimal pre-algebra. The ProgramByDesign project claims, however, that\nchildren would have more fun with such \"live\" functions than with algebraic\nexpressions that count the number of garden tiles [see Prentice Hall books for\ngrades 8-9].\n</p><p>The ProgramByDesign project proposes that both traditional mathematics as well as\nscience courses could benefit from an integration of this form of programming. In\ncontrast to the traditional Basic or Visual Basic blocks in such books, a Racket\nprogram consists of as many lines as the mathematics. Moving between the mathematics\nand the program is thus straightforward. Better still, the meaning of the two are\nthe same. <a href=\"/wiki/DrRacket\" class=\"mw-redirect\" title=\"DrRacket\">DrRacket</a>'s algebraic stepper can illustrate how Racket evaluates the\nprogram as if it were a sixth or seventh grade student, step by step, using plain\nalgebra.\n</p>\n<h2><span id=\"Functional_Programming.2C_Computing_and_Design_in_Programming_101\"></span><span class=\"mw-headline\" id=\"Functional_Programming,_Computing_and_Design_in_Programming_101\">Functional Programming, Computing and Design in Programming 101</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=ProgramByDesign&amp;action=edit&amp;section=3\" title=\"Edit section: Functional Programming, Computing and Design in Programming 101\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>For the introductory curriculum on programming, the ProgramByDesign project emphasizes\nthat courses should focus on the role of systematic design. Even if students never\nprogram again, they should see how helpful a systematic approach to problem solving\nis. This should help them whether they become programmers or doctors or journalists or\nphotographers. Thus, an introductory course in programming would not be perceived as a\nplace where students learn about the syntax of the currently fashionable (and soon-to-be-obsolete) programming\nlanguages, but a place where they can learn something widely applicable.\n</p><p>The key design element of the ProgramByDesign curriculum is the <i>design recipe</i>.\nIt has two dimensions: the process dimension and the data dimension.\n</p><p>Along the process dimension students learn that there are six steps to designing a\n(simple) program, before they can run it and others can use it: \n</p>\n<ol><li>problem analysis with the goal of describing the classes of data that go into the program and come out;</li>\n<li>the reformulation of the problem statement as a concise purpose statement;</li>\n<li>the creation of examples that illustrate the purpose statement and that serve as criteria for success;</li>\n<li>the organization of givens, also called a template or inventory;</li>\n<li>coding;</li>\n<li>and the creation of a test suite from examples to ensure the program works properly on small inputs.</li></ol>\n<p>Note that, as in <a href=\"/wiki/Test-driven_development\" title=\"Test-driven development\">test-driven development</a>, test cases are written <i>before</i> coding, as part of requirements analysis, rather than afterward as part of testing.\n</p><p>Almost any human endeavour can benefit from clearly understanding the problem, defining criteria for success, analyzing the available resources/givens, developing a proposed solution, and checking it against the criteria, in that order.\nA journalist, for example, benefits from\na similar process: figuring out the major concepts in a story; coining a headline;\nlining up examples and specific data; organizing the article about the story of\nthe givens and how the story unfolded; writing; and fact checking.\n</p><p>The data dimension can be summarized by the maxim <i>the shape of the data determines the shape of the code and tests.</i>  For example, if the input or output data type has three variants, a test suite should have at least one test case from each variant, and program code will probably contain a three-way conditional (whether explicit or hidden in a polymorphic dispatch).  If the input or output data type has three fields, a test suite will have to specify values for those three fields, and program code will have to refer to those three fields.  If the input or output data type has a simple <i>base case</i> and one or more self-referential variants, the test suite should include a base case and one or more non-base cases, and the program code will probably have a base case and one or more self-referential cases, isomorphic to the data type.  The technique of <a href=\"/wiki/Recursion\" title=\"Recursion\">recursion</a>, rather than being scary and mysterious, is simply the application of already-learned techniques to a self-referential data type.\n</p><p>Organizing the givens is the task of translating the descriptions of data into a\nprogram skeleton. Each form of description determines a specific form of program\norganization. The transformation is nearly mechanical and helps the students focus\non the creative part of the task.\n</p><p><a href=\"/wiki/How_to_Design_Programs\" title=\"How to Design Programs\">How to Design Programs</a> is the text book authored by the core of the ProgramByDesign\ngroup.\n</p>\n<h2><span class=\"mw-headline\" id=\"ProgramByDesign_and_choice_of_programming_language\">ProgramByDesign and choice of programming language</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=ProgramByDesign&amp;action=edit&amp;section=4\" title=\"Edit section: ProgramByDesign and choice of programming language\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>The name TeachScheme! appears to imply that this design recipe requires Scheme (now <a href=\"/wiki/Racket_(programming_language)\" title=\"Racket (programming language)\">Racket</a>)\nand is only teachable with Scheme. Neither conclusion is true, however.  Members of PLT and their trainees have successfully applied the design recipe\nin Assembly, C, Java, ML, Python, and other programming languages, not to speak of\npoetry, geometry, and biology courses. The fundamental idea of ProgramByDesign is to stress programming as a design activity. \nThis misconception is one of the reasons for the renaming actions taken in 2010.\n</p><p>To get started the ProgramByDesign project has produced three essential elements:\n</p>\n<ul><li>a series of successively more powerful and permissive teaching languages, which are dialects of Racket, matched to the design recipe but with error reporting matched to the student's level (for example, many things that are legal in standard Racket, but which a beginning student doesn't need, are flagged as errors in the Beginning Student level);</li>\n<li>a beginner-friendly, freely-downloadable, pedagogic programming environment, <a href=\"/wiki/DrRacket\" class=\"mw-redirect\" title=\"DrRacket\">DrRacket</a>, that enforces these language levels;</li>\n<li>a curriculum, encoded mostly in the book <a href=\"/wiki/HTDP\" class=\"mw-redirect\" title=\"HTDP\">HTDP</a> and its (draft) successor <a rel=\"nofollow\" class=\"external text\" href=\"http://www.ccs.neu.edu/home/matthias/HtDP2e/\">HtDP 2nd Edition</a></li></ul>\n<p>Their choice of Racket reflects their belief that Racket is a good language for a\nsmall team with little funding (in comparison to Java) to validate their\nconjectures. The PLT group has always tried to ensure, however, that the ideas remain\nportable to other contexts.\n</p>\n<h2><span class=\"mw-headline\" id=\"ProgramByDesign_for_Java\">ProgramByDesign for Java</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=ProgramByDesign&amp;action=edit&amp;section=5\" title=\"Edit section: ProgramByDesign for Java\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Over the past few years, the team has also created a second part of the\ncurriculum. It demonstrates how the same design recipe ideas apply to a complex\n<a href=\"/wiki/Object-oriented_programming\" title=\"Object-oriented programming\">object-oriented programming</a> language, such as <a href=\"/wiki/Java_(programming_language)\" title=\"Java (programming language)\">Java</a>.\nThis phase of the curriculum applies the same design recipe to Java, initially in a functional paradigm, then introducing object-oriented concepts such as polymorphism and inheritance, and then introducing the imperative techniques that are idiomatic in mainstream Java.\n</p><p>A part of the team has a grant from the National Science Foundation for conducting field tests in colleges \nand high schools. Professional-development workshops took place in the summer of 2007, 2008, 2009, and  2010. This part of the project is dubbed ReachJava; the accompanying book is\ntentatively titled \"How to Design Classes.\"\n</p>\n<h2><span class=\"mw-headline\" id=\"ProgramByDesign_and_Bootstrap\">ProgramByDesign and Bootstrap</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=ProgramByDesign&amp;action=edit&amp;section=6\" title=\"Edit section: ProgramByDesign and Bootstrap\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>In 2006 PLT at Northeastern University and <a href=\"/wiki/Citizen_Schools\" title=\"Citizen Schools\">Citizen Schools</a> from Boston made joint efforts to reach out to inner city students with after-school programs. Citizen Schools is a nationwide organization that matches volunteers with after-school program sites and gets them started with scripted curricula. The goal of the effort is to translate the material into a sixth-grade curriculum. The first few tests were a great success in Boston.<sup id=\"cite_ref-1\" class=\"reference\"><a href=\"#cite_note-1\">&#91;1&#93;</a></sup><sup id=\"cite_ref-2\" class=\"reference\"><a href=\"#cite_note-2\">&#91;2&#93;</a></sup> The effect on the mathematics courses of this program has encouraged Microsoft\nand Google to fund a national scale-up effort, developing materials for training teachers and creating sites in Texas, California, and other volunteer cities.\n</p>\n<h2><span class=\"mw-headline\" id=\"References\">References</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=ProgramByDesign&amp;action=edit&amp;section=7\" title=\"Edit section: References\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<div class=\"reflist\" style=\"list-style-type: decimal;\">\n<div class=\"mw-references-wrap\"><ol class=\"references\">\n<li id=\"cite_note-1\"><span class=\"mw-cite-backlink\"><b><a href=\"#cite_ref-1\">^</a></b></span> <span class=\"reference-text\"><cite class=\"citation news\"><a rel=\"nofollow\" class=\"external text\" href=\"http://www.boston.com/yourtown/news/dorchester/2011/05/bootstrap_program_pulls_up_rox.html\">\"Bootstrap program pulls up Roxbury, Dorchester middle-schoolers\"</a>. <i>Boston.com</i>. 2011-05-03<span class=\"reference-accessdate\">. Retrieved <span class=\"nowrap\">2011-09-29</span></span>.</cite><span title=\"ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Boston.com&amp;rft.atitle=Bootstrap+program+pulls+up+Roxbury%2C+Dorchester+middle-schoolers&amp;rft.date=2011-05-03&amp;rft_id=http%3A%2F%2Fwww.boston.com%2Fyourtown%2Fnews%2Fdorchester%2F2011%2F05%2Fbootstrap_program_pulls_up_rox.html&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AProgramByDesign\" class=\"Z3988\"><span style=\"display:none;\">&#160;</span></span></span>\n</li>\n<li id=\"cite_note-2\"><span class=\"mw-cite-backlink\"><b><a href=\"#cite_ref-2\">^</a></b></span> <span class=\"reference-text\"><a rel=\"nofollow\" class=\"external free\" href=\"http://www.cs.brown.edu/~sk/Publications/Talks/Moby-Bootstrap/\">http://www.cs.brown.edu/~sk/Publications/Talks/Moby-Bootstrap/</a></span>\n</li>\n</ol></div></div>\n<h2><span class=\"mw-headline\" id=\"External_links\">External links</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=ProgramByDesign&amp;action=edit&amp;section=8\" title=\"Edit section: External links\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul><li><a rel=\"nofollow\" class=\"external text\" href=\"http://programbydesign.org/\">ProgramByDesign</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://www.racket-lang.org/\">Racket</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://www.htdp.org/\"><i>How to Design Programs</i></a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://www.bootstrapworld.org/\">Bootstrap</a></li></ul>\n\n<!-- \nNewPP limit report\nParsed by mw2239\nCached time: 20180920022229\nCache expiry: 1900800\nDynamic content: false\nCPU time usage: 0.108 seconds\nReal time usage: 0.139 seconds\nPreprocessor visited node count: 215/1000000\nPreprocessor generated node count: 0/1500000\nPost\u2010expand include size: 5753/2097152 bytes\nTemplate argument size: 93/2097152 bytes\nHighest expansion depth: 7/40\nExpensive parser function count: 1/500\nUnstrip recursion depth: 0/20\nUnstrip post\u2010expand size: 3109/5000000 bytes\nNumber of Wikibase entities loaded: 0/400\nLua time usage: 0.045/10.000 seconds\nLua memory usage: 1.6 MB/50 MB\n-->\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%  115.127      1 -total\n 55.51%   63.909      1 Template:Refimprove\n 40.78%   46.945      1 Template:Reflist\n 34.26%   39.443      1 Template:Ambox\n 31.44%   36.196      1 Template:Cite_news\n  1.51%    1.742      1 Template:Main_other\n-->\n\n<!-- Saved in parser cache with key enwiki:pcache:idhash:3350103-0!canonical and timestamp 20180920022229 and revision id 860352048\n -->\n</div>"},"langlinks":[],"categories":[{"sortkey":"","hidden":"","*":"Articles_needing_additional_references_from_September_2011"},{"sortkey":"","hidden":"","*":"All_articles_needing_additional_references"},{"sortkey":"","*":"Computer_science_education"},{"sortkey":"","*":"Scheme_(programming_language)"},{"sortkey":"","*":"Java_(programming_language)"}],"links":[{"ns":14,"exists":"","*":"Category:Articles needing additional references from September 2011"},{"ns":0,"exists":"","*":"Citizen Schools"},{"ns":0,"exists":"","*":"Computer science"},{"ns":0,"exists":"","*":"Curriculum"},{"ns":0,"exists":"","*":"DrRacket"},{"ns":0,"exists":"","*":"HTDP"},{"ns":0,"exists":"","*":"How to Design Programs"},{"ns":0,"exists":"","*":"Java (programming language)"},{"ns":0,"exists":"","*":"Matthias Felleisen"},{"ns":0,"exists":"","*":"Object-oriented programming"},{"ns":0,"exists":"","*":"Racket (programming language)"},{"ns":0,"exists":"","*":"Recursion"},{"ns":0,"exists":"","*":"Test-driven development"},{"ns":4,"exists":"","*":"Wikipedia:Verifiability"},{"ns":12,"exists":"","*":"Help:Introduction to referencing with Wiki Markup/1"},{"ns":12,"exists":"","*":"Help:Maintenance template removal"}],"templates":[{"ns":10,"exists":"","*":"Template:Refimprove"},{"ns":10,"exists":"","*":"Template:More citations needed"},{"ns":10,"exists":"","*":"Template:Ambox"},{"ns":10,"exists":"","*":"Template:Reflist"},{"ns":10,"exists":"","*":"Template:Cite news"},{"ns":10,"exists":"","*":"Template:Main other"},{"ns":828,"exists":"","*":"Module:Unsubst"},{"ns":828,"exists":"","*":"Module:Message box"},{"ns":828,"exists":"","*":"Module:No globals"},{"ns":828,"exists":"","*":"Module:Yesno"},{"ns":828,"exists":"","*":"Module:Arguments"},{"ns":828,"exists":"","*":"Module:Message box/configuration"},{"ns":828,"exists":"","*":"Module:Category handler"},{"ns":828,"exists":"","*":"Module:Category handler/data"},{"ns":828,"exists":"","*":"Module:Category handler/config"},{"ns":828,"exists":"","*":"Module:Category handler/shared"},{"ns":828,"exists":"","*":"Module:Category handler/blacklist"},{"ns":828,"exists":"","*":"Module:Namespace detect/data"},{"ns":828,"exists":"","*":"Module:Namespace detect/config"},{"ns":828,"exists":"","*":"Module:Citation/CS1"},{"ns":828,"exists":"","*":"Module:Citation/CS1/Configuration"},{"ns":828,"exists":"","*":"Module:Citation/CS1/Whitelist"},{"ns":828,"exists":"","*":"Module:Citation/CS1/Utilities"},{"ns":828,"exists":"","*":"Module:Citation/CS1/Date validation"},{"ns":828,"exists":"","*":"Module:Citation/CS1/Identifiers"},{"ns":828,"exists":"","*":"Module:Citation/CS1/COinS"},{"ns":828,"exists":"","*":"Module:Check for unknown parameters"}],"images":["Question_book-new.svg"],"externallinks":["http://www.boston.com/yourtown/news/dorchester/2011/05/bootstrap_program_pulls_up_rox.html","http://www.cs.brown.edu/~sk/Publications/Talks/Moby-Bootstrap/","http://www.ccs.neu.edu/home/matthias/HtDP2e/","http://programbydesign.org/","http://www.racket-lang.org/","http://www.htdp.org/","http://www.bootstrapworld.org/"],"sections":[{"toclevel":1,"level":"2","line":"History","number":"1","index":"1","fromtitle":"ProgramByDesign","byteoffset":330,"anchor":"History"},{"toclevel":1,"level":"2","line":"Functional Programming, Computing and Algebra","number":"2","index":"2","fromtitle":"ProgramByDesign","byteoffset":1498,"anchor":"Functional_Programming,_Computing_and_Algebra"},{"toclevel":1,"level":"2","line":"Functional Programming, Computing and Design in Programming 101","number":"3","index":"3","fromtitle":"ProgramByDesign","byteoffset":4529,"anchor":"Functional_Programming,_Computing_and_Design_in_Programming_101"},{"toclevel":1,"level":"2","line":"ProgramByDesign and choice of programming language","number":"4","index":"4","fromtitle":"ProgramByDesign","byteoffset":8041,"anchor":"ProgramByDesign_and_choice_of_programming_language"},{"toclevel":1,"level":"2","line":"ProgramByDesign for Java","number":"5","index":"5","fromtitle":"ProgramByDesign","byteoffset":9641,"anchor":"ProgramByDesign_for_Java"},{"toclevel":1,"level":"2","line":"ProgramByDesign and Bootstrap","number":"6","index":"6","fromtitle":"ProgramByDesign","byteoffset":10517,"anchor":"ProgramByDesign_and_Bootstrap"},{"toclevel":1,"level":"2","line":"References","number":"7","index":"7","fromtitle":"ProgramByDesign","byteoffset":11576,"anchor":"References"},{"toclevel":1,"level":"2","line":"External links","number":"8","index":"8","fromtitle":"ProgramByDesign","byteoffset":11604,"anchor":"External_links"}],"parsewarnings":[],"displaytitle":"ProgramByDesign","iwlinks":[],"properties":[{"name":"wikibase_item","*":"Q7248387"}]}}