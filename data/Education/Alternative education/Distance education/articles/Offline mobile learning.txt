Offline mobile learning is the ability to access learning materials on a mobile device without requiring an Internet connection. Generally, web-based applications functionalities are dependent on ability to access to the Web. While there are many practical reasons for an application to access data on a server, not every feature of an application may necessarily need to have such access. Offline access to such features may enhance the user experience and wider applicability of an application  Tasks that require a single service request are well suited to offline scenarios. Such tasks follow a "compose and forward" model, where the user specifies all of the required data for the service request, which is then forwarded to the actual service when the client reconnects. Examples of this type of task are: composing an e-mail, composing a meeting request, and entering order information. All of these tasks are discrete items that the user can complete offline and that result in a single service request.  The developed world’s emphasis on highly sophisticated technological devices is a futuristic dream for most developing countries.  Nevertheless, these countries realise that M-Learning is more than just using a mobile device for E-Learning, and that it requires an entirely different approach. In order to utilize M-Learning efficiently in these developing countries, there is a need to understand this approach, as technology becomes available. These mobile technologies have successfully enabled learning opportunities and support to those learners in developing countries who are situated far distances away from educational facilities, and do not have the infrastructure to support access. Users in developing countries have the same need for M-Learning to be mobile, accessible and affordable, as those in developed countries do. The very significance of M-Learning is its ability to make learning mobile, away from the classroom or workplace. These Wireless and mobile technologies enable learning opportunities to learners who do not have direct access to learning in these places. Many learners in developing countries have trouble accessing the internet, or experience difficulty in affording technology that enables learning in an E-Learning environment. Mobile devices are a cheaper alternative compared to traditional E-Learning equipment such as PC’s and Laptops. However, to fully utilize this potential it is imperative to explore the factors that determine mobile telecommunications development in the developing world.  Delivering mobile services on open hardware and open software not just practically makes sense but can also lower the cost and thus increase the possibility of offering sustainable services in the future. While the benefits of open-source software are proven, it is important to conduct a broader study to investigate the potential role of relatively new copyleft approach for custom hardware, as supporting mobile learners in their own socio-cultural contexts of developing countries is a significant challenge.  A range of devices exist from mobile phones to single-purpose devices such as E-book readers. Current web technologies provide limited support for offline access to content and therefore web applications are generally designed for online interactions with server and require Internet connection to work. But mobile device is often disconnected by nature and wireless network connection is not available all the time. Device needs to store data locally in a fully searchable database and application should allow continuous interaction regardless of availability of Internet. Application should also be device and platform independent. Some modern mobile devices have the capability to store thousands of documents and therefore have the potential to be used as powerful offline learning tools. Typically, the optimal solution is to use the local store as much as possible, since it is usually faster than a remote connection. However, the more work an application does locally, the more code you need to write to implement the feature locally and to synchronize the corresponding data. There is a cost/benefit tradeoff to consider, and some features may not be worthwhile to support locally.  