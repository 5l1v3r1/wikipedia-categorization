A circular reference is a series of references where the last object references the first, resulting in a closed loop. A circular reference is not to be confused with the logical fallacy of a circular argument.  Although a circular reference will often be unhelpful and reveal no information, such as two entries in a book index referring to each other, it is not necessarily so that a circular reference is of no use.  Dictionaries, for instance, must always ultimately be a circular reference since all words in a dictionary are defined in terms of other words, but a dictionary nevertheless remains a useful reference.  Sentences containing circular references can still be meaningful; is circular but not without meaning.  Indeed, it can be argued that self-reference is a necessary consequence of Aristotle's Law of non-contradiction, a fundamental philosophical axiom.  In this view, without self-reference, logic and mathematics become impossible, or at least, lack usefulness.   Circular references can appear in computer programming when one piece of code requires the result from another, but that code needs the result from the first. For example: Function A will show the time the sun last set based on the current date, which it can obtain by calling Function B. Function B will calculate the date based on the number of times the moon has orbited the earth since the last time Function B was called.  So, Function B asks Function C just how many times that is.  Function C doesn't know, but can figure it out by calling Function A to get the time the sun last set.The entire set of functions is now worthless because none of them can return any useful information whatsoever.  This leads to what is technically known as a livelock.  It also appears in spreadsheets when two cells require each other's result.  For example, if the value in Cell A1 is to be obtained by adding 5 to the value in Cell B1, and the value in Cell B1 is to be obtained by adding 3 to the value in Cell A1, no values can be computed.  (Even if the specifications are A1:=B1+5 and B1:=A1-5, there is still a circular reference.  It doesn't help that, for instance, A1=3 and B1=-2 would satisfy both formulae, as there are infinitely many other possible values of A1 and B1 that can satisfy both instances.) A circular reference represents a big problem in computing. In ISO Standard SQL circular integrity constraints are implicitly supported within a single table. Between multiple tables circular constraints (e.g. foreign keys) are permitted by defining the constraints as deferrable (See CREATE TABLE for PostgreSQL and DEFERRABLE Constraint Examples for Oracle). In that case the constraint is checked at the end of the transaction not at the time the DML statement is executed. To update a circular reference two statements can be issued in a single transaction that will satisfy both references once the transaction is committed. A distinction should be made with processes containing a circular reference between those that are incomputable and those that are an iterative calculation with a final output.  The latter may fail in spreadsheets not equipped to handle them but are nevertheless still logically valid.  Circular reference in worksheets can be a very useful technique for solving implicit equations such as the Colebrook equation and many others, which might otherwise require tedious Newton-Raphson algorithms in VBA or use of macros.  