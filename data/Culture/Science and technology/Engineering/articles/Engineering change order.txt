Engineering change orders (ECO) are used for changes in components, assemblies, or documents such as processes and work instructions.  They may also be used for changes in specifications. Lastly, it can be "a modification that will have an effect on a manufactured product or manufacturing process."  ECOs are also called an "engineering change note", engineering change notice (ECN), or just an engineering change (EC).  In a typical system development cycle, the specification or the implementation is likely to change during engineering development or during integration of the system elements. These last-minute design changes are commonly referred to as engineering change orders (ECOs) and affect the functionality of a design after it has been wholly or partially completed. ECOs can compensate for design errors found during debug or changes that are made to the design specification to compensate for design problems in other areas of the system design. When improperly managed, engineering change orders can vastly increase costs.  In product development the need for change is caused by: "[A] document approved by the design activity that describes and authorizes the implementation of an engineering change to the product and its approved configuration documentation".  An ECO must contain at least this information:  In chip design, ECO is the process of inserting a logic change directly into the netlist after it has already been processed by an automatic tool.  Before the chip masks are made, ECOs are usually done to save time, by avoiding the need for full ASIC logic synthesis, technology mapping, place, route, layout extraction, and timing verification.  EDA tools are often built with incremental modes of operation to facilitate this type of ECO. After masks have been made, ECOs may be done to save money.  If a change can be implemented by modifying only a few of the layers (typically metal) then the cost is much less than it would be if the design was re-built from scratch.  This is because starting the process from the beginning will almost always require new photomasks for all layers, and each of the 20 or so masks in a modern semiconductor fabrication process is quite expensive.  A change implemented by modifying only a few layers is typically called a metal-mask ECO or a post-mask ECO.  Designers often sprinkle a design with unused logic gates, and EDA tools have specialized commands, to make this process easier. One of the most common ECOs in ASIC design is the gate-level netlist ECO. In this flow, engineers manually (and often tediously) hand-edit the gate-level netlist, instead of re-running logic synthesis. The netlist files have to be searched for the logic affected by the change, the files need to be edited to implement the changes up and down the hierarchy, and the changes need to be tracked and verified to make sure exactly what needs to change gets changed and nothing more. This is a very time and resource-intensive process that is easily subject to errors.  Therefore formal equivalence checking is normally used after ECOs to ensure the revised implementation matches the revised specification. With time-to-market pressures and rising mask costs in the semiconductor industry, several electronic design automation (EDA) companies are beginning to bring more automation into the ECO implementation process. Most popular place and route products have some level of built-in ECO routing to help with implementing physical-level ECOs. Cadence Design Systems has recently announced a product called conformal ECO designer, that automates the creation of Functional ECOs, usually the most tedious process in implementing an ECO. It uses formal equivalence checking and logic synthesis techniques to produce a gate-level ECO netlist based on the changed RTL. Synopsys in the past had a product called ECO compiler that is now defunct. Synopsys now has primetime-ECO for dealing with ECOs.  Tweaker-F1 & Tweaker-T1 have also come into the limelight in the recent DAC-2012 for their ECO algorithms.  The telecommunications industry has a formal process that takes elements of the ECO and other considerations and combines them into the "product change notice" (PCN). After telecommunications products have been generally available and/or in service for a period of time, it often becomes necessary for suppliers to introduce changes to those products. As a result of implementing these changes – regardless of who performs the actual work – the telecommunications carriers are significantly impacted with respect to labor and resources, etc. Thus, it is imperative that changes to these products are accurately reported and tracked through completion, according to the needs and requirements of the carriers. The term "product change" includes changes to hardware, software, and firmware that occur over the entire life of a product. Product changes include those considered reportable and non-reportable. These changes may be applied by a supplier, a customer, or a contractor retained by the customer, depending on negotiated agreements. Fundamentally, the customer's goal is to ensure there is a process by which there is accurate and efficient tracking and reporting of changes to products.  Changes are considered reportable when they affect the performance or life span of a product. Such changes include any that affect the form, fit, function, or the product technical specification (i.e., documentation) of the product. The desire for supplier or customer traceability may result in a reportable change. The entire PCN process is documented in GR-209, Issue 6, Generic Requirements for Product Change Notices (PCNs). 