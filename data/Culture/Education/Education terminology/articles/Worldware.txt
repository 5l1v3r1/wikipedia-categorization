Worldware is a term coined by Steve Ehrmann to denote materials that are a) created and marketed mainly for purposes other than (just) teaching and learning, but which are also b) used for teaching and learning.  Examples of worldware include personal computers, most word processing software, and software used mainly for professional research.   Ehrmann coined the term while leading the Valuable Viable Software (VVS) project of the Educom Software Initiative. Educom is now Educause, and the Educom Software Initiative was a volunteer initiative created in the late 1980s by Steven W. Gilbert, then Educom's Vice President for Education. The goal of the VVS project was to find examples of software that had gotten into widespread, influential use in post-secondary teaching and learning. In the early decades of computer use, many educators and observers assumed that the best way to use computing to support learning was to create special purpose hardware and software for that purpose, e.g., tutorial software, even educational word processors (complete with instructional materials and feedback) and even computers created specifically for educational use. The VVS project team studied more than two dozen software packages, looking for examples that had been both valuable (evaluations and experience indicated that the software-in-use could be of great educational value) and viable (i.e., the software had been in use by enough people and for enough years to influence educational practice). Most examples of valuable viable software that they found were either worldware or "student editions of worldware." Minitab, one of the software packages studied by the VVS Project, was an example of a student edition of worldware. It was designed to be very much like professional software, but easier to use and cheaper to purchase than its professional counterpart.  The VVS Project also found that student editions of worldware often evolved into worldware; the easy-to-use, inexpensive software was used for professional purposes, too, especially by people who had learned using the original software. The finding was a startling one: in the early 1990s, most people still assumed that the most important way to use computing to support learning was by designing elegant, powerful software to support learning (e.g., intelligent tutors, simulations, branching pathways of instructional information).  But such software rarely seemed to last long enough to attain widespread use.  Typically, the VVS Project found, such software would become obsolete without ever achieving wide enough use to justify further foundation or publisher funding. The obsolescence occurred for many reasons, the most fast-acting of which was usually technical â€” changes in operating hardware and software often required an investment as large, or larger, than the original expenditure in order for the software to survive in the new environment.  This led to the observation that, "the bigger the grant funding the development of software, the smaller the chance for the software to thrive." Another pitfall for such software lay in the publisher practice of making a gift of such software to faculty who adopted their textbooks.  Because no income stream was directly associated with the instructional software, the publisher usually had little motivation to upgrade the software. Worldware (and student editions) had a number of advantages that rendered them more viable than typical instructional software: 