The Geometry of Interaction (GoI) was introduced by Jean-Yves Girard shortly after his work on linear logic. In linear logic, proofs can be seen as various kinds of networks as opposed to the flat tree structures of sequent calculus. To distinguish the real proof nets from all the possible networks, Girard devised a criterium involving trips in the network. Trips can in fact be seen as some kind of operator[clarification needed] acting on the proof. Drawing from this observation, Girard described directly this operator from the proof and has given a formula, the so-called execution formula, encoding the process of cut elimination at the level of operators. One of the first significant applications of GoI was a better analysis  of Lamping's algorithm  for optimal reduction for the lambda calculus. GoI had a strong influence on game semantics for linear logic and PCF. GoI has been applied to deep compiler optimisation for lambda calculi.  A bounded version of GoI dubbed the Geometry of Synthesis has been used to compile higher-order programming languages directly into static circuits.  