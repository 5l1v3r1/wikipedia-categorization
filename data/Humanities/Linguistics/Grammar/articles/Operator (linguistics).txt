In generative grammar, the technical term operator denotes a type of expression that enters into an a-bar movement dependency.    One often says that the operator "binds a variable".  Operators are often determiners, such as interrogatives ('which', 'who', 'when', etc.), or quantifiers ('every', 'some', 'most', 'no'), but adverbs such as sentential negation ('not') have also been treated as operators.  It is also common within generative grammar to hypothesise phonetically empty operators whenever a clause type or construction exhibits symptoms of the presence of an a-bar movement dependency, such as sensitivity to extraction islands.     The following examples illustrate the use of the term operator within generative grammatical theory. The following example is a case of so-called "wh-movement": 1. What did Bill say he wants to buy __ ? Here, "what" is an operator, binding a phonetically empty "variable" indicated here as "__". The next example illustrates quantifier raising (QR): 2. I didn't do something. In this example, "something" occupies the position of a variable which is bound by an operator in the beginning of the sentence. This example may require some explanation. The sentence is ambiguous between an "I did nothing" reading and another, "there's something I didn't do" reading. On the latter reading, one would represent the sentence as follows within generative grammar (omitting irrelevant details):  3. Somethingx [I didn't do x] Here, "x" is the variable, and "somethingx" is the operator binding that variable. Since no movement appears to have taken place in the original sentence, the movement is said to be "covert",  and it is usually referred to as "Quantifier Raising" or "QR".  Various theories within generative grammar and linguistic semantics have tried to explain this phenomenon, and various semantic approaches argue that no syntactic movement is present in such sentences   The following is an example which is treated within generative grammar in terms of an invisible operator binding an invisible variable:   4. John is easy to please. The relevant aspects of this sentence are represented as follows: 5.  John is easy [OPx to please x]. Here, "Opx" is the empty operator and "x" is the variable bound by that operator, functioning as the object of the verb "please". Part of the reason to assume the empty operator—variable dependency in such sentences is that they exhibit sensitivity to extraction islands.  For example, the following attempt to create a similar example results in an ungrammatical sentence.  The theoretical representation of the sentence is given right below,  omitting, again, irrelevant details. 6.  Bad: John is easy to decide whether to please. 7.  John is easy [Opx to decide  whether to please x] Here, "whether" creates an island for a-bar movement. This means that the operator Opx is unable to bind its variable "x", and this is thought to be the reason why the sentence is ungrammatical. One popular theoretical implementation of this is called "relativized minimality".   Roughly, it states that a variable of a given kind must be bound by the closest available operator of the same kind. In (6,7), "x" can't be bound by "Opx", because there is a closer operator of the same kind as "Opx": "whether".  The sentence (4) with its representation (5) is grammatically acceptable because there's no intervening operator between "Opx" and "x" which blocks the dependency in that sentence. 