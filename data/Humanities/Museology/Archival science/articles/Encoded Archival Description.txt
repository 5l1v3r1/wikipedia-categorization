Encoded Archival Description (EAD) is an XML standard for encoding archival finding aids, maintained by the Technical Subcommittee for Encoded Archival Description of the Society of American Archivists, in partnership with the Library of Congress.  EAD originated at the 1993 Society of American Archivists annual meeting in New Orleans and was headed by Daniel Pitti at the University of California, Berkeley.  The project's goal was to create a data standard for describing archives, similar to the MARC standards for describing bibliographic materials. The initial EAD Version 1.0 was released in the fall of 1998.  Such a standard enables archives, museums, libraries, and manuscript repositories to list and describe their holdings in a manner that would be machine-readable and therefore easy to search, maintain and exchange.  Since its inception, many archives and special collections have adopted it. In addition to the development and maintenance work done by the Society of American Archivists and the Library of Congress, the Research Libraries Group (RLG) has developed and published a set of "Best Practice" implementation guidelines  for EAD, which lays out mandatory, recommended, and optional elements and attributes. RLG has also provided a kind of clearinghouse for finding aids in EAD format, known as ArchiveGrid. Member libraries provide RLG the URL for their finding aids; RLG automatically harvests data from the finding aids, indexes it, and provides a search interface for the index, thus giving researchers the ability to search across several hundred institutions' collections with a single query. RLG also has developed the "RLG Report Card,"  an automated quality-checking program that will analyze an EAD instance and report any areas where it diverges from the best practices guidelines. SAA's Technical Subcommittee for Encoded Archival Description, which include international representation, embarked on a revision of the EAD standard in 2010.  The latest version, EAD3, was released in August 2015.  A number of repositories in the United States, Canada, the United Kingdom, France, Australia and elsewhere have adopted and implemented EAD with varying levels of technical sophistication. One of the most ambitious efforts is the Online Archive of California, a union catalog of over 5000 EAD finding aids covering manuscripts and images from institutions across the state. The French National Library Francois Mitterrand publishes more than 90000 EAD finding aids covering archives and manuscripts. The EAD standard's XML schema specifies the elements to be used to describe a manuscript collection as well as the arrangement of those elements (for example, which elements are required, or which are permitted inside which other elements).  The EAD tag set has 146 elements and is used both to describe a collection as a whole, and also to encode a detailed multi-level inventory of the collection.  Many EAD elements have been, or can be, mapped to content standards (such as DACS and ISAD(G)) and other structural standards (such as MARC or Dublin Core), increasing the flexibility and interoperability of the data.  EAD 1.0 was an SGML document type definition (DTD). EAD 2002, the second incarnation of EAD, was finalized in December 2002 and made available as an XML DTD.   The latest version of EAD, EAD3, is available as both an XML schema and a DTD.  Note: Examples in this section are EAD2, and may not be valid against the EAD3 schema. Note: In the current release of EAD3 1.0, the eadheader element has been replaced with the control element.  The first section of an EAD-encoded finding aid is the eadheader.  This section contains the title and optional subtitle of the collection and detailed information about the finding aid itself: who created it, when it was created, its revision history, the language the finding aid is written in, and so on.  The eadheader itself has a number of required attributes that map to various ISO standards such as ISO 3166-1 for country codes and ISO 8601 for date formats. The eadheader and its child elements can be mapped to other standards for easy interchange of information.  They are often mapped to Dublin Core elements such as Creator, Author, Language.  For example, in the excerpt below the relatedencoding="DC" attribute of the eadheader element specifies that child elements will be mapped to Dublin Core; the child element <author encodinganalog="Creator"> indicates that the EAD element <author> maps to the Dublin Core element <creator>. Example of an eadheader: The archdesc section contains the description of the collection material itself.  First, the Descriptive Identification or did element contains a description of the collection as a whole, including the creator (which may be an individual or an organization), size (usually given in linear feet), inclusive dates, language(s), and an abstract or brief description.  As with the eadheader above, elements may be mapped to corresponding standards; elements in this section are usually mapped to MARC elements.  For example, in the excerpt below the relatedencoding="MARC21" attribute of the archdesc element specifies that child elements will be mapped to MARC21; the child element <unittitle encodinganalog="245$a" label="Title: "> indicates that the unittitle element maps to MARC field 245, subfield a. Example: Several additional descriptive elements may follow the did including: The second, and usually largest, section of the archdesc is the dsc, which contains a full inventory of the collection broken down into progressively smaller intellectual chunks.  EAD offers two options: the c element which can be nested within itself to an unlimited level, and a set of numbered container elements c01 through c12 which can only be nested numerically (i.e. a c01 can contain only a c02; a c02 can contain only a c03, and so on).  Note that the c and c0# elements refer to intellectual subdivisions of the material; the actual physical container is specified using the container element.  The inventory may go down to as detailed a level as desired.  The example below shows an inventory to the folder level. Example of an inventory: There have been some studies about how to cite EAD files with variable granularity. In particular, Buneman and Silvello  proposed a rule-based system to automatically create citation snippets to be used as references when citing XML data; a case study is based on EAD. Furthermore, Silvello  proposed a framework, which learning from examples, automatically creates references at different level of coarseness for XML files. This framework has been tested on the Library of Congress collection of EAD files. A user study  analyzing the user interaction patterns with finding aids highlighted that "[they] focus on rules for description rather than on facilitating access to and use of the materials they list and describe", and that many archive users have serious issues using finding aids. Common and frequent user interaction patterns with finding aids are navigational and thus they require to browse the archival hierarchy to make sense of the archival data.  Some critics claim that EAD constrains researcher interaction because several operations are either impossible or inefficient.   For example, it is problematic to:  Furthermore, EAD allows for several degrees of freedom in tagging practice, which may turn out to be problematic in the automatic processing of EAD files, since it is difficult to know in advance how an institution will use the hierarchical elements. It has been underlined that only EAD files meeting stringent best practice guidelines are shareable and searchable.  